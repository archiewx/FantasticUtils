9242e13c74dfcf766fbdfce216421375
/* istanbul ignore next */"use strict";

var cov_2h17wltlzi = function () {
  var path = "/Users/zhenglongfan/code/github/fantistic-utils/src/base/native-types.js",
      hash = "4ff2cbf449a433bdc5bb52d3d31be6dd367781d7",
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = "__coverage__",
      coverageData = {
    path: "/Users/zhenglongfan/code/github/fantistic-utils/src/base/native-types.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "1": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 57
        }
      },
      "2": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "getTypes",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 17
          }
        },
        loc: {
          start: {
            line: 7,
            column: 23
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});


/**
 * 获取mix的类型
 * @param {*} mix
 */
function getTypes(mix) {
  /* istanbul ignore next */cov_2h17wltlzi.f[0]++;

  var typeStr = /* istanbul ignore next */(cov_2h17wltlzi.s[0]++, Object.prototype.toString.apply(mix));
  var nativeType = /* istanbul ignore next */(cov_2h17wltlzi.s[1]++, typeStr.slice(8, typeStr.length - 1));
  /* istanbul ignore next */cov_2h17wltlzi.s[2]++;
  return nativeType;
}

/* istanbul ignore next */exports.default = getTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdGl2ZS10eXBlcy5qcyJdLCJuYW1lcyI6WyJnZXRUeXBlcyIsIm1peCIsInR5cGVTdHIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImFwcGx5IiwibmF0aXZlVHlwZSIsInNsaWNlIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOzs7O0FBSUEsU0FBU0EsUUFBVCxDQUFrQkMsR0FBbEIsRUFBdUI7QUFBQTs7QUFDckIsTUFBTUMsNERBQVVDLE9BQU9DLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxLQUExQixDQUFnQ0wsR0FBaEMsQ0FBVixDQUFOO0FBQ0EsTUFBTU0sK0RBQWFMLFFBQVFNLEtBQVIsQ0FBYyxDQUFkLEVBQWlCTixRQUFRTyxNQUFSLEdBQWlCLENBQWxDLENBQWIsQ0FBTjtBQUZxQjtBQUdyQixTQUFPRixVQUFQO0FBQ0Q7OzRDQUVjUCxRIiwiZmlsZSI6Im5hdGl2ZS10eXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbi8qKlxuICog6I635Y+WbWl455qE57G75Z6LXG4gKiBAcGFyYW0geyp9IG1peFxuICovXG5mdW5jdGlvbiBnZXRUeXBlcyhtaXgpIHtcbiAgY29uc3QgdHlwZVN0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkobWl4KVxuICBjb25zdCBuYXRpdmVUeXBlID0gdHlwZVN0ci5zbGljZSg4LCB0eXBlU3RyLmxlbmd0aCAtIDEpXG4gIHJldHVybiBuYXRpdmVUeXBlXG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFR5cGVzXG4iXX0=